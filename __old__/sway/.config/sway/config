# Read `man 5 sway` for a complete reference.

### Variables
#
# primary modifier: Logo key. Use Mod1 for Alt.
set $mod Mod4
# named modifiers
set $alt Mod1
set $super Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty
set $editor nvim

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show drun

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg "$HOME/.wallpaper/wallpaper" fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
    timeout 300 "swaylock --daemonize --color=000000 --image=*:$HOME/.wallpaper/screenlock --scale=fill" \
    timeout 600 "swaymsg 'output * dpms off'" resume "swaymsg 'output * dpms on'"

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
    xkb_layout "us"
    xkb_variant "dvorak"
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # start a vim window
    bindsym $mod+Shift+Return exec $term -e $editor

    # start a file browser
    bindsym $mod+Control+Return exec xdg-open "$HOME"

    # start a web browser
    bindsym $mod+$alt+Return exec xdg-open "https://about:newtab"

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+p exec $menu
    bindsym $mod+e exec rofimoji --rofi-args="-font 'Ubuntu Mono 24'"

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Exit Sway Session' \
        -b 'Shut down' 'systemctl poweroff' \
        -b 'Reboot' 'systemctl reboot' \
        # -b 'Hibernate' 'systemctl hibernate' \
        # -b 'Suspend' 'systemctl hybrid-sleep' \
        -b 'Logout' 'swaymsg exit'

    # screenshots
    bindsym --release $mod+Shift+s exec grim "${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots/%Y-%m-%dT%H-%M-%S.png"
    bindsym --release $mod+Shift+w exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')"  "${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots/%Y-%m-%dT%H-%M-%S.png"
    bindsym --release $mod+Shift+r exec grim -g "$(slurp)" "${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots/%Y-%m-%dT%H-%M-%S.png"

    # lock the screen
    bindsym $mod+Control+l exec swaylock --daemonize --color=000000 --image=*:$HOME/.wallpaper/screenlock --scale=fill
#
#
#
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
#bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
#bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
#bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # Object splitting
    bindsym $mod+v splith
    bindsym $mod+s splitv

    # Switch the current container between different layout styles
    bindsym $mod+apostrophe layout stacking
    bindsym $mod+comma layout tabbed
    bindsym $mod+period layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+o focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # fine-grained control
    bindsym $alt+$left resize shrink width 1px
    bindsym $alt+$down resize grow height 1px
    bindsym $alt+$up resize shrink height 1px
    bindsym $alt+$right resize grow width 1px

    # Ditto, with arrow keys
    bindsym $alt+Left resize shrink width 1px
    bindsym $alt+Down resize grow height 1px
    bindsym $alt+Up resize shrink height 1px
    bindsym $alt+Right resize grow width 1px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Appearance
#
# Font:
#
font pango:Ubuntu Mono 9
#
# Window decoration colors (solarized):
#
# class                  title_border  bg       fg       indicator  child_border
client.focused_inactive  #073642       #073642  #93a1a1  #2aa198    #073642
client.unfocused         #073642       #002b36  #586e75  #2aa198    #002b36
client.urgent            #eee8d5       #dc322f  #fdf6e3  #2aa198    #dc322f
client.placeholder       #073642       #073642  #839496  #073642    #073642
client.background        #073642

### Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command waybar

    colors {
        statusline #002b36
        background #839496
        # inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*

### Autostart
#
exec ckb-next --background
exec flatpak run im.riot.Riot --hidden
exec flatpak run com.discordapp.Discord --start-minimized
exec flatpak run org.zealdocs.Zeal


### Persistent Window Properties:
#

# zeal window is always floating
for_window [class="Zeal" instance="zeal"] floating enable
