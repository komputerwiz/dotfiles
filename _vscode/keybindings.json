[
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines",
    "when": "textInputFocus && !editorReadonly"
  },

  // remove default (unused) bindings for <C-Down> and <C-Up>...
  {
    "key": "ctrl+up",
    "command": "-scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-scrollLineDown",
    "when": "textInputFocus"
  },
  // ...and use them to control selection expand and shrink instead...
  {
    "key": "ctrl+up",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+down",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  // ...so that we can override those default <A-S-Left> and <A-S-Right> bindings...
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  // ...for subword navigation!
  {
    "key": "alt+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },

  // toggle settings (via rebornix.toggle extension)
  {
    "key": "F2",
    "command": "toggle",
    "args": {
      "id": "light-dark-theme",
      "value": [
        {
          "workbench.colorTheme": "Solarized Dark"
        },
        {
          "workbench.colorTheme": "Solarized Light"
        }
      ]
    }
  },
  {
    "key": "ctrl+alt+c",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "codelens",
      "value": [
        {
          "editor.codeLens": true,
        },
        {
          "editor.codeLens": false,
        }
      ]
    }
  },
]
