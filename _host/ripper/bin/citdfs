#!/bin/bash
set -e

SUDO="/usr/bin/sudo"
SYSTEMCTL="/usr/bin/systemctl"

NAMES=("archive" "home" "projects" "public" "sysadmin")
NAMES_PRE=("${NAMES[@]/#/mnt-net-citdfs-}")
MOUNTS_ALL=("${NAMES_PRE[@]/%/.mount}")

function _mount() {
  echo "mnt-net-citdfs-$1.mount"
}

function _process_args() {
  ALL_IF_EMPTY="$1"
  shift
  if [ $# -eq 0 ]; then
    if [ "$ALL_IF_EMPTY" != true ]; then
      echo "ERROR: No valid share name provided. [${NAMES[@]}]" >&2
      exit 1
    fi
    RETVAL=("${MOUNTS_ALL[@]}")
  elif [[ " $@ " =~ " all " ]]; then
    RETVAL=("${MOUNTS_ALL[@]}")
  else
    for NAME in "$@"; do
      if [[ ! " ${NAMES[@]} " =~ " $NAME " ]]; then
        echo "WARNING: unrecognized share name: $NAME" >&2
        continue
      fi
      RETVAL+=("$(_mount "$NAME")")
    done
    if [ -z "$RETVAL" ]; then
      echo "ERROR: No valid share name provided. [${NAMES[@]}]" >&2
      exit 1
    fi
  fi
}

case "$1" in
  mount)
    shift
    _process_args false "$@"
    "$SUDO" "$SYSTEMCTL" start "${RETVAL[@]}"
    ;;

  umount|unmount)
    shift
    _process_args false "$@"
    "$SUDO" "$SYSTEMCTL" stop "${RETVAL[@]}"
    ;;

  status)
    shift
    _process_args true "$@"
    "$SYSTEMCTL" status "${RETVAL[@]}"
    ;;

  *)
    echo "Usage: $0 (mount|umount|status) [MOUNT...]" >&2
    echo "" >&2
    echo "Available MOUNT values:" >&2
    echo "  - all" >&2
    for NAME in "${NAMES[@]}"; do
      echo "  - $NAME" >&2
    done
    exit 1
    ;;
esac
